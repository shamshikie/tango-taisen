// <auto-generated />
using System;
using LearningWordsOnline.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearningWordsOnline.Migrations
{
    [DbContext(typeof(LearningWordsOnlineDbContext))]
    partial class LearningWordsOnlineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearningWordsOnline.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AspNetUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("NVARCHAR(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.AppUserDefinition", b =>
                {
                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AnsweredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("WrongCount")
                        .HasColumnType("int");

                    b.HasKey("AppUserId", "DefinitionId");

                    b.HasIndex("DefinitionId");

                    b.ToTable("AppUserDefinitions");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BattledAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.BattleAppUser", b =>
                {
                    b.Property<int>("BattleId")
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("BattleId", "AppUserId");

                    b.HasIndex("AppUserId");

                    b.ToTable("BattleAppUsers");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Definition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Meaning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartOfSpeechId")
                        .HasColumnType("int");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartOfSpeechId");

                    b.HasIndex("WordId");

                    b.ToTable("Definitions");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.DefinitionCategory", b =>
                {
                    b.Property<int>("DefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("DefinitionId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("DefinitionCategories");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId1")
                        .HasColumnType("int");

                    b.Property<int>("AppUserId2")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId1");

                    b.HasIndex("AppUserId2");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.FriendRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId1")
                        .HasColumnType("int");

                    b.Property<int>("AppUserId2")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FriendRequestStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReferencedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RespondedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId1");

                    b.HasIndex("AppUserId2");

                    b.ToTable("FriendRequests");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Icon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Icons");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.PartOfSpeech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("PartOfSpeeches");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("IconId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<int>("RankPoint")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.HasIndex("IconId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Pronunciation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Voice")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("Pronunciations");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.RoomInvitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId1")
                        .HasColumnType("int");

                    b.Property<int>("AppUserId2")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DismissedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReferencedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId1");

                    b.HasIndex("AppUserId2");

                    b.ToTable("RoomInvitations");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.UserActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastLoginedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("UserActivities");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Spelling")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.AppUserDefinition", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.AppUser", "AppUser")
                        .WithMany("AppUserDefinitions")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningWordsOnline.Models.Definition", "Definition")
                        .WithMany("AppUserDefinitions")
                        .HasForeignKey("DefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Definition");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Battle", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.Language", "Language")
                        .WithMany("Battles")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.BattleAppUser", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.AppUser", "AppUser")
                        .WithMany("BattleAppUsers")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningWordsOnline.Models.Battle", "Battle")
                        .WithMany("BattleAppUsers")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Battle");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Category", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.Language", "Language")
                        .WithMany("Categories")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningWordsOnline.Models.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Language");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Definition", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.PartOfSpeech", "PartOfSpeech")
                        .WithMany("Definitions")
                        .HasForeignKey("PartOfSpeechId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LearningWordsOnline.Models.Word", "Word")
                        .WithMany("Definitions")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartOfSpeech");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.DefinitionCategory", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.Category", "Category")
                        .WithMany("DefinitionCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningWordsOnline.Models.Definition", "Definition")
                        .WithMany("DefinitionCategories")
                        .HasForeignKey("DefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Definition");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Friend", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.AppUser", "AppUser1")
                        .WithMany("Friends1")
                        .HasForeignKey("AppUserId1")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LearningWordsOnline.Models.AppUser", "AppUser2")
                        .WithMany("Friends2")
                        .HasForeignKey("AppUserId2")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AppUser1");

                    b.Navigation("AppUser2");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.FriendRequest", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.AppUser", "Sender")
                        .WithMany("SentRequests")
                        .HasForeignKey("AppUserId1")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LearningWordsOnline.Models.AppUser", "Receiver")
                        .WithMany("ReceivedRequests")
                        .HasForeignKey("AppUserId2")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.PartOfSpeech", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.Language", "Language")
                        .WithMany("PartOfSpeeches")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Profile", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.AppUser", "AppUser")
                        .WithOne("Profile")
                        .HasForeignKey("LearningWordsOnline.Models.Profile", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningWordsOnline.Models.Icon", "Icon")
                        .WithMany("Profiles")
                        .HasForeignKey("IconId");

                    b.Navigation("AppUser");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Pronunciation", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.Word", "Word")
                        .WithMany("Pronunciations")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.RoomInvitation", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.AppUser", "Inviter")
                        .WithMany("SentInvitations")
                        .HasForeignKey("AppUserId1")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LearningWordsOnline.Models.AppUser", "Invitee")
                        .WithMany("ReceivedInvitations")
                        .HasForeignKey("AppUserId2")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Invitee");

                    b.Navigation("Inviter");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.UserActivity", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.AppUser", null)
                        .WithOne("UserActivity")
                        .HasForeignKey("LearningWordsOnline.Models.UserActivity", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Word", b =>
                {
                    b.HasOne("LearningWordsOnline.Models.Language", "Language")
                        .WithMany("Words")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.AppUser", b =>
                {
                    b.Navigation("AppUserDefinitions");

                    b.Navigation("BattleAppUsers");

                    b.Navigation("Friends1");

                    b.Navigation("Friends2");

                    b.Navigation("Profile")
                        .IsRequired();

                    b.Navigation("ReceivedInvitations");

                    b.Navigation("ReceivedRequests");

                    b.Navigation("SentInvitations");

                    b.Navigation("SentRequests");

                    b.Navigation("UserActivity");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Battle", b =>
                {
                    b.Navigation("BattleAppUsers");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("DefinitionCategories");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Definition", b =>
                {
                    b.Navigation("AppUserDefinitions");

                    b.Navigation("DefinitionCategories");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Icon", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Language", b =>
                {
                    b.Navigation("Battles");

                    b.Navigation("Categories");

                    b.Navigation("PartOfSpeeches");

                    b.Navigation("Words");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.PartOfSpeech", b =>
                {
                    b.Navigation("Definitions");
                });

            modelBuilder.Entity("LearningWordsOnline.Models.Word", b =>
                {
                    b.Navigation("Definitions");

                    b.Navigation("Pronunciations");
                });
#pragma warning restore 612, 618
        }
    }
}
